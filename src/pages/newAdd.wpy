<style lang="less" src="../less/editAdd.less"></style>

<template>
  <view class="container">
    <view class="address-container">
      <view class="address-layer">
        <text class="title"><text class="iconfont icon-shoucang"></text>收货人</text><input type="text" placeholder="姓名" placeholder-class="placeholder" value="{{userName}}" @blur="nameTap"/>
      </view>
      <view class="address-layer">
        <text class="title"><text class="iconfont icon-shoucang"></text>联系手机</text><input type="number" placeholder="手机号码" placeholder-class="placeholder" value="{{userPhone}}" @blur="phoneTap"/>
      </view>
      <view class="address-layer">
        <text class="title"><text class="iconfont icon-shoucang"></text>省</text>
        <!-- <view class="picker">
          <picker mode="multiSelector" @change="topArea" @columnchange="childArea" @cancel="cancel" value="{{multiIndex}}" range="{{multiArray}}">
            
            <view>{{multiArray[0][multiIndex[0]]}}，{{multiArray[1][multiIndex[1]]}}，{{multiArray[2][multiIndex[2]]}}</view>
           
            <view>{{result[0]}}, {{result[1]}}, {{result[2]}}</view>
          </picker>
          <text class="iconfont icon-xlsanjiao"></text>
        </view> -->
        <view class="picker">
          <picker @change="pickTopArea" value="{{topIndex}}" range="{{topArray}}" disabled="{{topDisable}}">
            <view class="picker {{result[0] === '请选择省' ? 'placeholder' : ''}}">
              <!-- {{topArray[topIndex]}} -->
              {{result[0]}}
            </view>
          </picker>
        </view>
      </view>
      <view class="address-layer">
        <text class="title"><text class="iconfont icon-shoucang"></text>市</text>
        <view class="picker {{result[1] === '请选择市' ? 'placeholder' : ''}}">
          <picker @change="pickCity" value="{{cityIndex}}" range="{{cityArray}}" disabled="{{cityDisable}}">
            <view class="picker">
              {{result[1]}}
            </view>
          </picker>
        </view>
      </view>
      <view class="address-layer">
        <text class="title"><text class="iconfont icon-shoucang"></text>区</text>
        <view class="picker {{result[2] === '请选择区' ? 'placeholder' : ''}}">
          <picker @change="pickDistrict" value="{{disIndex}}" range="{{disArray}}" disabled="{{disDisable}}">
            <view class="picker">
              {{result[2]}}
            </view>
          </picker>
        </view>
      </view>
      <view class="address-layer">
        <text class="title"><text class="iconfont icon-shoucang"></text>详细地址</text>
        <textarea value="{{userAdd}}" placeholder="详细地址：如道路、街区、门牌号等" placeholder-class="placeholder" @input="userAddTap"></textarea>
      </view>
      <view class="address-layer">
        <text class="title"><text class="iconfont icon-shoucang disable"></text>邮编</text><input type="number" placeholder="邮政编号" placeholder-class="placeholder" value="{{postcode}}" maxlength="6" @blur="postTap"/>
      </view>
    </view>
    <button class="default-button" @tap="confirm">确认添加</button>
  </view>
</template>

<script>
  import wepy from 'wepy'

  export default class NewAddress extends wepy.page {
    config = {
      navigationBarTitleText: '新增地址'
    }
    data = {
      token: '',
      userName: '',
      userPhone: '',
      postcode: '',
      myreg: /^[1][3,4,5,7,8][0-9]{9}$/,
      userAdd: '',
      topArray: [],
      topIndex: 0,
      topAreaId: [],
      cityArray: [],
      cityIndex: 0,
      cityAreaId: [],
      disArray: [],
      disIndex: 0,
      disAreaId: [],
      pickerValue: '',
      result: ['请选择省', '请选择市', '请选择区'],
      topDisable: true,
      cityDisable: true,
      disDisable: true
    }
    methods = {
      nameTap (e) {
        this.userName = this.$parent.filteremoji(e.detail.value)
        return this.userName
      },
      phoneTap (e) {
        this.userPhone = e.detail.value
        return this.userPhone
      },
      postTap (e) {
        this.postcode = e.detail.value
        return this.postcode
      },
      userAddTap (e) {
        this.userAdd = this.$parent.filteremoji(e.detail.value)
      },
      pickTopArea (e) {
        this.topIndex = e.detail.value
        this.result[0] = this.topArray[this.topIndex]
        this.result[1] = '请选择市'
        this.result[2] = '请选择区'
        this.getCity(this.topAreaId[this.topIndex], () => {
          this.getArea(this.cityAreaId[0])
        })
      },
      pickCity (e) {
        this.cityIndex = e.detail.value
        this.result[1] = this.cityArray[this.cityIndex]
        this.result[2] = '请选择区'
        this.getArea(this.cityAreaId[this.cityIndex])
      },
      pickDistrict (e) {
        this.disIndex = e.detail.value
        this.result[2] = this.disArray[this.disIndex]
        this.pickerValue = this.disAreaId[this.disIndex]
      },
      // topArea (e) {
      //   this.multiIndex = e.detail.value
      //   this.multiArray.forEach((item, index) => {
      //     this.result[index] = item[this.multiIndex[index]]
      //   })
      //   // var temp = []
      //   // temp = this.multiValue.map((item, index) => {
      //   //   return this.multiAreaId[index][this.multiIndex[index]]
      //   // })
      //   // this.multiValue = temp
      //   // console.log(this.multiValue)
      // },
      // childArea (e) {
      //   this.multiIndex[e.detail.column] = e.detail.value
      //   switch (e.detail.column) {
      //     case 0:
      //       // 选择省
      //       this.getCity(this.multiAreaId[0][e.detail.value], () => {
      //         this.getArea(this.multiAreaId[1][0])
      //       })
      //       break
      //     case 1:
      //       // 选择市
      //       console.log(this.multiAreaId[1][e.detail.value])
      //       this.getArea(this.multiAreaId[1][e.detail.value])
      //       break
      //     case 2:
      //       this.multiIndex[2] = e.detail.value
      //       this.multiValue = this.multiAreaId[2][e.detail.value]
      //       break
      //   }
      // },
      cancel () {
        this.initTopArea()
      },
      confirm () {
        this.token = this.$parent.getToken()
        if (this.userName && this.userPhone && this.userAdd && this.pickerValue) {
          if (this.myreg.test(this.userPhone)) {
            var data = {
              token: this.token,
              name: this.userName,
              phone: this.userPhone,
              areaId: this.pickerValue,
              detail: this.userAdd,
              postCode: this.postcode
            }
            this.$parent.HttpRequest.AddAddress(data).then((res) => {
              console.log(res)
              if (res.data.error === 0) {
                wepy.navigateBack()
              } else {
                if (this.$parent.missToken) {
                  // this.token = this.$parent.getToken(res.data.error)
                }
              }
            })
          } else {
            wepy.showToast({
              title: '请输入正确的手机号',
              icon: 'none'
            })
          }
        } else {
          wepy.showToast({
            title: '请填写完整收货信息',
            icon: 'none'
          })
        }
      }
    }
    // initTopArea () {
    //   this.multiArray[0] = []
    //   this.multiAreaId[0] = []
    //   this.getAreaData(0, (res) => {
    //     var data = res.data.data
    //     data.forEach((item) => {
    //       this.multiArray[0].push(item.area_name)
    //       this.multiAreaId[0].push(item.area_id)
    //       this.multiIndex = [0, 0, 0]
    //     })
    //     this.getCity(this.multiAreaId[0][0], () => {
    //       this.getArea(this.multiAreaId[1][0])
    //     })
    //   })
    // }
    initTopArea () {
      this.topArray = []
      this.topAreaId = []
      this.topIndex = 0
      this.getAreaData(0, (res) => {
        this.topDisable = false
        var data = res.data.data
        data.forEach((item) => {
          this.topArray.push(item.area_name)
          this.topAreaId.push(item.area_id)
        })
        this.getCity(this.topAreaId[0], () => {
          this.getArea(this.cityAreaId[0], () => {
          })
        })
      })
    }
    getAreaData (id, cb) {
      var data = {
        parentId: id
      }
      this.$parent.HttpRequest.GetTopArea(data).then((res) => {
        console.log(res)
        if (res.data.error === 0) {
          cb && cb(res)
        }
        this.$apply()
      })
    }
    getCity (id, cb) {
      this.cityDisable = true
      this.cityArray = []
      this.cityAreaId = []
      this.cityIndex = 0
      this.getAreaData(id, (res) => {
        this.cityDisable = false
        var data = res.data.data
        data.forEach((item) => {
          this.cityArray.push(item.area_name)
          this.cityAreaId.push(item.area_id)
        })
        cb && cb()
      })
    }
    getArea (id, cb) {
      this.disDisable = true
      this.disArray = []
      this.disAreaId = []
      this.disIndex = 0
      this.getAreaData(id, (res) => {
        this.disDisable = false
        var data = res.data.data
        data.forEach((item) => {
          this.disArray.push(item.area_name)
          this.disAreaId.push(item.area_id)
        })
        cb && cb()
      })
    }
    // getCity (id, cb) {
    //   this.multiArray[1] = []
    //   this.multiAreaId[1] = []
    //   this.getAreaData(id, (res) => {
    //     var data = res.data.data
    //     data.forEach((item) => {
    //       this.multiArray[1].push(item.area_name)
    //       this.multiAreaId[1].push(item.area_id)
    //     })
    //     this.multiIndex[1] = 0
    //     cb && cb()
    //   })
    // }
    // getArea (id) {
    //   this.multiArray[2] = []
    //   this.multiAreaId[2] = []
    //   this.getAreaData(id, (res) => {
    //     var data = res.data.data
    //     data.forEach((item) => {
    //       this.multiArray[2].push(item.area_name)
    //       this.multiAreaId[2].push(item.area_id)
    //     })
    //     this.multiIndex[2] = 0
    //     this.multiValue = this.multiAreaId[2][0]
    //   })
    // }
    onLoad () {
      this.initTopArea()
      this.$apply()
    }
  }
</script>
