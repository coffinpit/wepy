<style lang="less">
  view{  
    box-sizing: border-box;
  }
  .container{
    padding-bottom: 120rpx;
    display:block;
    min-height:calc(100vh);
    width:100%;
    overflow:hidden;
  }
  .cart-status{
    background:#fff;
    padding:30rpx 20rpx;
    display: flex;
    width:100%;
    justify-content:space-between;
    .title{
      color:#333;
      vertical-align:middle;
      line-height:48rpx;
    }
    .default-button{
      padding:0 20rpx;
    }
  }
  .cart-list{
    width:100%;
    margin-top:20rpx;
    .content{
      margin-bottom:0;
      position:relative;
      height:100rpx;
      padding:20rpx;
      .title{
        position:absolute;
        top:20rpx;
        left:0;
        width:100%;
        padding:10rpx 20rpx; 
        z-index:5;
        transition: 0.3s left ease-in;
        background:#fff;
        &.animate{
          left: 10%;
        }
      }
      .check-layer{
        position:absolute;
        top:20rpx;
        left:0;
        width:10%;
        z-index:4;
        text-align:center;
      }
    }
    .expire-content{
      background: #f5f5f5;
      border-top:1px #eee solid;
      .title{
        background: #f5f5f5;
        width:50%
      }
      .clear{
        position: absolute;
        right:20rpx;
        top:26rpx;
        width:50%;
        text-align: right;
      }
    }
    .iconfont{
      font-size:80rpx;
      vertical-align:middle;
      margin-right:20rpx;
    }
  }
  .vip-tip{
    width:100%;
    margin:20rpx 0;
    background:#fff;
    padding:10rpx 20rpx;
    .iconfont{
      font-size:60rpx;
      vertical-align:middle;
      margin-right:10rpx;
    }
    .title{
      font-size:28rpx;
    }
    &.no-active{
      .iconfont {
        color:#999;
      }
    }
  }
  .check-G{
    width:100%;
  }
  .item-box{  
    width:100%;
  }  
  .items{  
    width: 100%;  
  }  
  .item-list{  
    position: relative;  
    border-top: 2rpx solid #eee;  
    height: 200rpx;  
    overflow: hidden;
    background-color: #fff;
    &.expire{
      .inner.txt{
        background: #f5f5f5;
      }
      .inner-image {
        background-color: #f5f5f5;
        image{
          opacity: 0.7;
        }
      }
      .inner-layer{
        .title, .font-small{
          color: #999
        }
      }
    }
  }
  .item-list:last-child{  
      border-bottom: 2rpx solid #eee;  
  }  
  .cart-checkbox{
    width:36rpx;
    height:36rpx;
    border-radius:50%;
    border:1px #ccc solid;
    display:inline-block;
    vertical-align:middle;
    background:#fff;
    margin-top:10rpx;
    position:relative;
    .iconfont{
      opacity:0;
      color:#fff;
      font-size:36rpx;
      margin-bottom:4rpx;
      font-weight:700;
      position:absolute;
      left:0;
      top:0;
      line-height:36rpx;
    }
    &.checked {
      background:#fc5e43;
      border:1px #fc5e43 solid;
      transition: 0.3s all ease-in;
      .iconfont{
        opacity:1 !important;
      }
    }
  }
  .inner{  
      position: absolute;  
      top:0;  
      height:100%;
  }  
  .inner.txt{
    background-color: #fff;  
    width: 100%;  
    z-index: 999;  
    padding:20rpx; 
    left:0;
    box-sizing:border-box; 
    overflow:hidden;
    transition: 0.3s left ease-in;
    &.animate{
      left: 10%;
    }
  }  
  .inner.del{  
      width: 10%;
      height:100%;
      line-height:200rpx;
      text-align: center;  
      z-index: 4;  
      left: 0;  
      color: #fff;
      .cart-checkbox{
        margin-top:0;
      }
  } 
  .inner-left{
    width:360rpx;
    overflow:hidden;
    white-space:break-all;
    .place{
      min-height: 108rpx;
    }
  }
  .inner-animate-left{
    transform:translateX(120rpx)
  } 
  .inner-layer{
    width:460rpx;
    overflow:hidden;
    position:absolute;
    top:20rpx;
    left:30rpx;
    z-index:9999;
    .title{
      min-height:76rpx;
      height:76rpx;
      line-height:38rpx;
      overflow:hidden;
      display:block;
      font-size:28rpx;
      margin-bottom:6rpx;
    }
    .tips, .title{
      display:block;
    }
    .tips{
      float:right;
    }
    .font-small{
      float:left;
      display:block;
      width:260rpx;
    }
  }
  .inner-image{
    position:absolute;
    right:30rpx;
    top:20rpx;
    height:150rpx;
    display:inline-block;
    z-index:9999;
    image{
      width:148rpx;
      height:148rpx;
      border:1px #eee solid;
      box-sizing:border-box;
      float:left;
      border-right:none;
    }
  }
  .counter{
    display:inline-block;
    float:left;
    width:50rpx;
    height:150rpx;
    z-index:999999;
    .counter-btn{
      display:block;
      height:50rpx;
      line-height:50rpx;
      width:50rpx;
      font-size:28rpx;
      box-sizing:border-box;
    }
    .number{
      border-top:none;
      border-bottom:none;
      min-height: 50rpx;
      height:50rpx;
      width:50rpx;
    }
    .temp-input{
      left:25rpx;
      top:68rpx;
    }
  }
  .cart-bottom{
    position:fixed;
    bottom:0;
    left:0;
    width:100%;
    height:120rpx;
    background:#fff;
    z-index:99999999;
    image{
      position:absolute;
      top:0;
      left:0;
      height:8rpx;
      width:77%;
    }
    .title{
      width:13%;
      text-align:center;
      line-height:120rpx;
      display:inline-block;
    }
    .all{
      position:relative;
      checkbox{
        position:absolute;
        left:0;
        top:0;
        opacity:0;
        width:100%;
      }
    }
    .del-cart{
      float:right;
      width:23%;
      background:#ccc;
      color:#fff;
      height:120rpx;
      line-height:120rpx;
      font-size:32rpx;
      text-align:center;
      &.active{
        background:#fc5e43;
      }
    }
    .cart-info{
      color:#333;
      font-size:32rpx;
      line-height:120rpx;
      display:inline-block;
      width: 60%;
      text-align:right;
      float:right;
      padding-right:2%;
      overflow:hidden;
      height:120rpx;
      white-space:nowrap;
      text-overflow:ellipsis;
    }
  }
  .blank{
    .blank-button{
      width:200rpx;
      margin:100rpx auto;
      line-height:50rpx;
      text-align:center;
    }
  }
  .hidden-temp{
    .temp-input {
      display:none;
    }
    .minusBtn.able{
      background:#fff;
      color:#333
    }
  }
  .unedit-layer{
    width:100%;
    height:100%;
    position:absolute;
    left:0;
    top:0;
    z-index:-1;
    background:rgba(204,204,204,0.2);
    transition: 0.3s opacity ease-in;
    opacity:0;
    &.animate{
      left:10%;
      opacity:1;
      z-index:9999999;
    }
  }
</style>
<template>
  <view class="container">
    <view wx:if="{{!isNull}}">
      <view class="cart-status" wx:if="{{userLevel}}">
        <text class="font-normal">尊敬的优价会员，本单已为您节省 <text class="font-normal link font-bold">￥{{cartStatus.discount}}</text></text>
      </view>
      <view class="cart-status" wx:else>
        <text class="font-normal">已购￥{{cartStatus.totalprice}}, 会员价<text class="font-normal link font-bold">￥{{cartStatus.memberPrice}}</text></text>
        <view class="default-button" @tap="goApplyVip">加入会员</view>
      </view>
      <repeat for="{{cartList}}" item="item" index="index">
        <view class="cart-list">
          <view class="content" wx:if="{{item.showTitle}}">
            <view class="unedit-layer {{isEdit ? 'animate' : ''}}"></view>
            <text class="title {{isEdit ? 'animate' : ''}}"><text class="iconfont icon-ys_ly"></text>{{item.title}}</text>
            <view class="check-layer">
              <view @tap.stop="coldAll({{index}})" class="cart-checkbox {{item.coldChecked ? 'checked' : ''}}">
                <text class="iconfont icon-fxkdui"></text>
              </view>
            </view>
          </view>
          <view class="item-box">  
            <view class="items">
                <repeat for="{{item.coldlist}}" index="index" item="item" key="index">  
                <view class="item-list {{item.disable ? 'expire' : ''}}">
                  <view class="unedit-layer {{isEdit ? 'animate' : ''}}"></view>
                  <view class="inner txt {{isEdit ? 'animate' : ''}}"> 
                    <view class="inner-layer" data-index="{{index}}" id="{{item.sourceId}}">
                      <text class="title">{{item.title}}</text>
                      <text class="font-small link">会员价：￥{{item.price}} </text>
                      <text class="font-small {{userLevel ? 'through' : ''}}">原价：￥{{item.oldprice}}</text>
                      <text class="tips">{{item.detail}}</text>
                    </view>
                    <view class="inner-image">
                      <image src="{{item.path}}" mode="aspectFill"  @tap.stop="goDetail({{item.id}})"></image>
                      <counteCold :num.sync="item.count" @plusEdit.user="plusCold" @minusEdit.user="minCold" @keyEdit.user="keyCold" :sourceId.sync="item.sourceId" @blurEdit.user="blurCold" :isDisabled.sync="item.disable"></counteCold>  
                    </view>
                  </view>
                  <view data-index="{{index}}" class="inner del" @tap.stop="coldCheck" data-value="{{item.sourceId}}">
                    <view class="cart-checkbox {{item.checked ? 'checked' : ''}}">
                      <text class="iconfont icon-fxkdui"></text>
                    </view>
                  </view>  
                 </view>
                </repeat>
            </view>  
          </view>                 
        </view>
      </repeat>
      <view class="cart-list" wx:if="{{hasExpire}}">
        <view class="content expire-content"><text class="title">失效商品</text><text class="font-normal clear link" @tap.stop="clearExpire">一键清空</text></view>
        <view class="item-box">
          <view class="items">
            <repeat for="{{expire}}" index="index" item="item" key="index">
              <view class="item-list {{item.disable ? 'expire' : ''}}">
                <view class="inner txt">
                  <view class="inner-layer" data-index="{{index}}" id="{{item.sourceId}}">
                    <text class="title">{{item.title}}</text>
                    <text class="font-small link">会员价：￥{{item.memberPrice}} </text>
                    <text class="tips" wx:if="{{item.disable}}">库存不足</text>
                    <text class="font-small {{userLevel ? 'through' : ''}}">原价：￥{{item.price}}</text>
                    <text class="tips">{{item.viceTitle + '×' + item.buyCount}}</text>
                  </view>
                  <view class="inner-image">
                    <image src="{{item.cover}}" mode="aspectFill"></image>
                    <counteCold :num.sync="item.buyCount" @plusEdit.user="plusCold" @minusEdit.user="minCold" @keyEdit.user="keyCold" :sourceId.sync="item.sourceId" @blurEdit.user="blurCold" :isDisabled.sync="item.disable"></counteCold>
                  </view>
                </view>
              </view>
            </repeat>
          </view>
        </view>
      </view>
      <view class="cart-bottom" wx:if="{{!isNull}}">
        <image src="../image/dz_bgbl.png"></image>
        <text class="title link edit" @tap="editTap">{{isEdit ? '取消' : '编辑'}}</text>
        <view class="title link all" @tap.stop="checkAll" wx:if="{{isEdit}}">全选</view>
        <text class="title link edit" @tap="deleteTap" wx:if="{{isEdit}}">删除</text>
        <text @tap.stop="goOrder" class="del-cart {{isEdit ? '' : 'active'}}">去结算</text>
        <text class="cart-info"><text class="tips">(含运费￥{{freight}})</text> 合计: <text class="link">￥{{finalprice}}</text></text>
      </view>
      <view class="vip-tip" wx:if="{{userLevel && !isNull}}">
        <text class="iconfont icon-vip link"></text>
        <text class="title">尊敬的优价会员，生鲜购满2公斤才可包邮哦</text>
      </view>
      <view class="vip-tip no-active" wx:elif="{{!isNull}}">
        <text class="iconfont icon-vip"></text>
        <text class="title">成为会员，生鲜购满2公斤全场包邮</text>
      </view>
    </view>
    <view wx:elif="{{isNull && !isLoading}}" class="blank">
      <defect type="2"></defect>
      <view class="blank-button" hover-class="blank-button-hover" @tap="goCategory">逛一逛</view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Counte from '../components/counter'
  import Defect from '../components/defect'

  export default class Cart extends wepy.page {
    config = {
      navigationBarTitleText: '购物车'
    }
    components = {
      counteCold: Counte,
      counteNormal: Counte,
      defect: Defect
    }
    data = {
      token: '',
      cartcount: [],
      checkedList: [],
      tempColdList: [],
      tempNormalList: [],
      cartStatus: {},
      cartList: [],
      coldlist: [],
      coldTitle: '',
      coldChecked: false,
      tempCold: [],
      isEdit: false,
      isNull: false,
      finalprice: 0,
      freight: 0,
      isLoading: true,
      validateCount: 0,
      expire: []
    }
    computed = {
      userLevel () {
        if (this.$parent.globalData.userLevel === 0) {
          return false
        } else if (this.$parent.globalData.userLevel === 1) {
          return true
        }
      },
      isNull () {
        if (this.cartList.length === 0) {
          return true
        } else {
          return false
        }
      },
      hasExpire () {
        if (this.expire.length === 0) {
          return false
        } else {
          return true
        }
      }
    }
    methods = {
      editTap () {
        this.isEdit = !this.isEdit
      },
      plusCold (e) {
        var sourceId = e.currentTarget.dataset.id
        this.cartList.forEach((item) => {
          item.coldlist.forEach((val) => {
            if (val.sourceId === sourceId && val.totalCount > this.validateCount) {
              val.count ++
              if (val.count > val.totalCount) {
                val.count = val.totalCount
                this.maxModal('数量已达上限')
              } else {
                // 发送购物车修改数据
                this.addCartData(val, 1, () => {
                  this.initPageData()
                })
              }
            }
          })
        })
        this.$apply()
      },
      minCold (e) {
        var sourceId = e.currentTarget.dataset.id
        this.cartList.forEach((item) => {
          item.coldlist.forEach((val) => {
            if (val.sourceId === sourceId && val.totalCount > this.validateCount) {
              val.count --
              if (val.count < 1) {
                val.count = 1
                this.maxModal('不能再少啦')
              } else {
                // 发送购物车修改数据
                this.addCartData(val, -1, () => {
                  this.initPageData()
                })
              }
            }
          })
        })
        this.$apply()
      },
      keyCold (keyVal, e) {
      },
      blurCold (keyVal, e) {
        var sourceId = e.currentTarget.dataset.id
        this.cartList.forEach((item) => {
          item.coldlist.forEach((val) => {
            if (val.sourceId === sourceId) {
              if (keyVal <= 0) {
                val.count = 1
              } else if (val.totalCount > this.validateCount && keyVal > val.totalCount) {
                val.count = val.totalCount
                this.maxModal('数量已达上限')
              } else if (val.totalCount <= this.validateCount) {
                val.count = 0
              } else {
                val.count = keyVal
              }
              if (!val.disable) {
                this.addCartData(val, val.count - val.initCount, () => {
                  this.initPageData()
                })
              }
            }
            return val.count
          })
        })
      },
      goDetail (id) {
        console.log(id)
        wepy.navigateTo({
          url: './detail?id=' + id
        })
      },
      goCategory () {
        wepy.switchTab({
          url: './category'
        })
      },
      goOrder () {
        if (!this.isEdit) {
          if (!this.hasExpire) {
            wepy.navigateTo({
              url: './paycart'
            })
          } else {
            wepy.showToast({
              title: '请先清空失效商品，再提交订单',
              icon: 'none'
            })
          }
        } else {
          wepy.showToast({
            title: '请先退出编辑状态',
            icon: 'none'
          })
        }
      },
      goApplyVip () {
        wepy.navigateTo({
          url: './applyVip'
        })
      },
      coldCheck (e) {
        var value = e.currentTarget.dataset.value
        this.cartList.forEach((item) => {
          item.coldlist.forEach((val) => {
            if (val.sourceId === value) {
              val.checked = !val.checked
            }
          })
          item.tempCold = item.coldlist.filter((item) => {
            return item.checked
          })
          if (item.tempCold.length === item.coldlist.length) {
            item.coldChecked = true
          } else {
            item.coldChecked = false
          }
        })
      },
      coldAll (index) {
        if (this.cartList[index].tempCold.length === this.cartList[index].coldlist.length) {
          this.cartList[index].coldlist.forEach((item) => {
            item.checked = false
          })
          this.cartList[index].coldChecked = false
          this.cartList[index].tempCold = []
        } else {
          this.cartList[index].coldlist.forEach((item) => {
            item.checked = true
          })
          this.cartList[index].coldChecked = true
          this.cartList[index].tempCold = this.cartList[index].coldlist
        }
      },
      checkAll () {
        var total = 0
        var check = 0
        this.cartList.forEach((item, index) => {
          total += item.coldlist.length
          check += item.tempCold.length
        })
        console.log(total, check)
        this.cartList.forEach((item, index) => {
          if (total === check) {
            item.coldlist.forEach((i) => {
              i.checked = false
            })
            item.coldChecked = false
            item.tempCold = []
          } else {
            item.coldlist.forEach((i) => {
              i.checked = true
            })
            item.coldChecked = true
            item.tempCold = item.coldlist
          }
        })
      },
      clearExpire () {
        var result = []
        this.expire.forEach((item) => {
          var obj = {}
          obj.sourceType = item.salesUnitType
          obj.sourceId = item.salesUnitId
          result.push(obj)
        })
        console.log(result)
        this.deleteData(result, () => {
          this.initPageData()
          this.$apply()
        })
      },
      deleteTap () {
        var that = this
        var result = []
        this.cartList.forEach((item) => {
          console.log(item.tempCold)
          item.tempCold.forEach((source) => {
            var obj = {}
            obj.sourceType = source.sourceType
            obj.sourceId = source.sourceId
            result.push(obj)
          })
        })
        if (result.length === 0) {
          wepy.showToast({
            title: '请选择商品',
            duration: 1000,
            image: '../image/cancel.png'
          })
        } else {
          wepy.showModal({
            title: '提示',
            content: '是否删除？',
            success: function (res) {
              if (res.confirm) {
                that.deleteData(result, () => {
                  that.initPageData()
                  that.$apply()
                })
              }
              if (res.cancel) {
              }
            }
          })
        }
      }
    }
    getChecked (arr, val) {
      if (arr.indexOf(val) === -1) {
        arr.push(val)
      } else {
        arr.splice(arr.indexOf(val), 1)
      }
    }
    maxModal (content) {
      wepy.showToast({
        title: content,
        duration: 1000,
        image: '../image/cancel.png'
      })
    }
    deleteData (json, cb) {
      var data = {
        token: this.token,
        sourceList: JSON.stringify(json)
      }
      this.$parent.HttpRequest.DeleteCartHttp(data).then((res) => {
        console.log(res)
        cb && cb()
      })
    }
    initPageData () {
      this.$parent.showLoading()
      var _this = this
      var data = {
        token: this.token
      }
      this.cartList = []
      this.expire = []
      _this.isLoading = true
      this.finalprice = 0
      this.freight = 0
      this.cartStatus = {}
      this.$parent.HttpRequest.GetCartHttp(data).then((res) => {
        console.log(res)
        _this.isLoading = false
        if (res.data.error === 0) {
          _this.$parent.showSuccess()
          var data = res.data.data
          this.cartStatus.totalprice = data.price
          this.cartStatus.discount = data.reduction
          this.cartStatus.memberPrice = data.memberPrice
          this.finalprice = data.finalPrice
          this.freight = data.freight
          data.childOrders.forEach((item) => {
            var obj = {}
            obj.title = item.title
            obj.freight = item.freight
            obj.coldChecked = false
            obj.tempCold = []
            obj.coldlist = this.initChild(item.salesUnits)
            if (obj.coldlist.length === 0) {
              obj.showTitle = false
            } else {
              obj.showTitle = true
            }
            _this.cartList.push(obj)
            _this.$apply()
          })
          console.log(this.cartList)
        } else {
          _this.$parent.showFail()
        }
        _this.$apply()
      }).catch(() => {
        _this.isLoading = false
        _this.$parent.showFail()
      })
    }
    filterList (parent) {
      var tempArr = []
      var tempExpire = []
      tempExpire = parent.filter((item) => {
        return item.keepCount <= this.validateCount || !item.isAllowSale || item.buyCount > item.keepCount
      })
      tempExpire.forEach((item) => {
        item.disable = true
        this.expire.push(item)
      })
      tempArr = parent.filter((item) => {
        return item.keepCount > this.validateCount && item.isAllowSale && item.buyCount <= item.keepCount
      })
      return tempArr
    }
    initChild (parent) {
      var child = []
      var tempExpire = this.filterList(parent)
      tempExpire.forEach((item) => {
        var obj = {}
        obj.path = item.cover
        obj.title = item.title
        obj.price = item.memberPrice
        obj.oldprice = item.price
        obj.id = item.productId
        obj.sourceType = item.salesUnitType
        obj.sourceId = item.salesUnitId
        obj.detail = item.viceTitle + '×' + item.buyCount
        obj.count = item.buyCount
        obj.initCount = item.buyCount
        obj.checked = false
        obj.totalCount = item.keepCount
        child.push(obj)
      })
      return child
    }
    addCartData (good, val, cb) {
      var data = {
        token: this.token,
        sourceType: good.sourceType,
        sourceId: good.sourceId,
        count: val
      }
      console.log(data)
      this.$parent.HttpRequest.AddCartHttp(data).then((res) => {
        console.log(res)
        if (res.data.error === 0) {
          cb && cb()
        }
        this.$apply()
      })
    }
    onLoad () {
      this.token = this.$parent.getToken()
      console.log(this.$parent.globalData.userLevel)
      // 判断用户memberHash
      this.$apply()
    }
    onShow () {
      this.initPageData()
      this.$apply()
    }
  }
</script>
